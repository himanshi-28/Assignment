{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DeLL\\\\Dropbox\\\\My PC (DESKTOP-2P3I371)\\\\Desktop\\\\20ucs079\\\\client\\\\src\\\\pages\\\\Summary.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Box, Typography, useTheme, useMediaQuery, TextField, Button, Alert, Collapse, Card } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  createWorker\n} = require(\"tesseract.js\");\nvar Jimp = require(\"jimp\");\nconst Summary = () => {\n  _s();\n  const theme = useTheme();\n  const isNotMobile = useMediaQuery(\"(min-width: 1000px)\");\n  const [text, setText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [ocrResult, setOcrResult] = useState(\"\");\n  const performOCR = async imagePath => {\n    const worker = createWorker();\n    await worker.loadLanguage(\"ind\");\n    await worker.initialize(\"ind\");\n    await worker.setParameters({});\n    const image = await Jimp.read(imagePath);\n    image.rgba(false);\n    image.greyscale();\n    await image.write(\"edited_\" + imagePath);\n    const data = await worker.recognize(\"edited_\" + imagePath);\n    setOcrResult(data.data.text);\n    await worker.terminate();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await performOCR(\"/client/src/pages/ktp.jpeg\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      if ((_err$response = err.response) !== null && _err$response !== void 0 && (_err$response$data = _err$response.data) !== null && _err$response$data !== void 0 && _err$response$data.error) {\n        setError(err.response.data.error);\n      } else if (err.message) {\n        setError(err.message);\n      }\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: isNotMobile ? \"40%\" : \"80%\",\n    p: \"2rem\",\n    m: \"2rem auto\",\n    borderRadius: 5,\n    sx: {\n      boxShadow: 5\n    },\n    backgroundColor: theme.palette.background.default,\n    children: [/*#__PURE__*/_jsxDEV(Collapse, {\n      in: error,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Text from Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Paste or type your text here\",\n        type: \"text\",\n        multiline: true,\n        required: true,\n        margin: \"normal\",\n        fullWidth: true,\n        value: text,\n        onChange: e => {\n          setText(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        size: \"large\",\n        sx: {\n          backgroundColor: theme.palette.background.alt,\n          color: \"white\",\n          mt: 2,\n          '&:hover': {\n            backgroundColor: theme.palette.background.basic\n          }\n        },\n        children: \"Extract Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        mt: 2,\n        children: [\"Not the right tool? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/homepage\",\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 4,\n        border: 1,\n        boxShadow: 0,\n        height: \"500px\",\n        borderRadius: 5,\n        borderColor: \"natural.medium\",\n        bgcolor: \"background.default\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        p: 2,\n        children: ocrResult || \"Extracted text will be displayed here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Summary, \"/FvX6F8+1JuHDzARU5vK9Dlx86s=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = Summary;\nexport default Summary;\nvar _c;\n$RefreshReg$(_c, \"Summary\");","map":{"version":3,"names":["React","useState","Link","axios","Box","Typography","useTheme","useMediaQuery","TextField","Button","Alert","Collapse","Card","jsxDEV","_jsxDEV","createWorker","require","Jimp","Summary","_s","theme","isNotMobile","text","setText","error","setError","ocrResult","setOcrResult","performOCR","imagePath","worker","loadLanguage","initialize","setParameters","image","read","rgba","greyscale","write","data","recognize","terminate","handleSubmit","e","preventDefault","err","_err$response","_err$response$data","response","message","setTimeout","width","p","m","borderRadius","sx","boxShadow","backgroundColor","palette","background","default","children","in","severity","mb","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","variant","placeholder","type","multiline","required","margin","fullWidth","value","onChange","target","size","alt","color","mt","basic","to","border","height","borderColor","bgcolor","_c","$RefreshReg$"],"sources":["C:/Users/DeLL/Dropbox/My PC (DESKTOP-2P3I371)/Desktop/20ucs079/client/src/pages/Summary.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Box, Typography, useTheme, useMediaQuery, TextField, Button, Alert, Collapse, Card } from \"@mui/material\";\r\n\r\nconst { createWorker } = require(\"tesseract.js\");\r\nvar Jimp = require(\"jimp\");\r\n\r\nconst Summary = () => {\r\n  const theme = useTheme();\r\n  const isNotMobile = useMediaQuery(\"(min-width: 1000px)\");\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [ocrResult, setOcrResult] = useState(\"\");\r\n\r\n  const performOCR = async (imagePath) => {\r\n    const worker = createWorker();\r\n    await worker.loadLanguage(\"ind\");\r\n    await worker.initialize(\"ind\");\r\n    await worker.setParameters({});\r\n\r\n    const image = await Jimp.read(imagePath);\r\n    image.rgba(false);\r\n    image.greyscale();\r\n    await image.write(\"edited_\" + imagePath);\r\n\r\n    const data = await worker.recognize(\"edited_\" + imagePath);\r\n    setOcrResult(data.data.text);\r\n\r\n    await worker.terminate();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await performOCR(\"/client/src/pages/ktp.jpeg\");\r\n    } catch (err) {\r\n      if (err.response?.data?.error) {\r\n        setError(err.response.data.error);\r\n      } else if (err.message) {\r\n        setError(err.message);\r\n      }\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width={isNotMobile ? \"40%\" : \"80%\"}\r\n      p={\"2rem\"}\r\n      m={\"2rem auto\"}\r\n      borderRadius={5}\r\n      sx={{ boxShadow: 5 }}\r\n      backgroundColor={theme.palette.background.default}\r\n    >\r\n      <Collapse in={error}>\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      </Collapse>\r\n      <form onSubmit={handleSubmit}>\r\n        <Typography variant=\"h3\">Text from Image</Typography>\r\n\r\n        <TextField\r\n          placeholder=\"Paste or type your text here\"\r\n          type=\"text\"\r\n          multiline={true}\r\n          required\r\n          margin=\"normal\"\r\n          fullWidth\r\n          value={text}\r\n          onChange={(e) => {\r\n            setText(e.target.value);\r\n          }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          size=\"large\"\r\n          sx={{ backgroundColor: theme.palette.background.alt, color: \"white\", mt: 2, '&:hover': { backgroundColor: theme.palette.background.basic } }}\r\n        >\r\n          Extract Text\r\n        </Button>\r\n\r\n        <Typography mt={2}>\r\n          Not the right tool? <Link to=\"/homepage\">Go Back</Link>\r\n        </Typography>\r\n      </form>\r\n\r\n      <Card sx={{ mt: 4, border: 1, boxShadow: 0, height: \"500px\", borderRadius: 5, borderColor: \"natural.medium\", bgcolor: \"background.default\" }}>\r\n        <Typography p={2}>\r\n          {ocrResult || \"Extracted text will be displayed here\"}\r\n        </Typography>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Summary;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}