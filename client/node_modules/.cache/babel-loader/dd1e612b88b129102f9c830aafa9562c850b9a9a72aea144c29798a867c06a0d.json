{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DeLL\\\\Dropbox\\\\My PC (DESKTOP-2P3I371)\\\\Desktop\\\\20ucs079\\\\client\\\\src\\\\pages\\\\ocr.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OCR = () => {\n  _s();\n  const [recognizedText, setRecognizedText] = useState('');\n  const [imagePath, setImagePath] = useState(\"/ktp.jpeg\"); // Assuming the image is in the public folder\n  const history = useHistory();\n  const handleOCR = async () => {\n    try {\n      const response = await axios.post(`${history.location.origin}/api/v1/ocr`, {\n        imagePath\n      });\n      setRecognizedText(response.data);\n    } catch (error) {\n      console.error('Error processing OCR:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OCR Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagePath,\n      alt: \"Image for OCR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOCR,\n      children: \"Run OCR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), recognizedText && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Recognized Text: \", recognizedText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(OCR, \"vhe7wRrEHqQhRvPvHPmA5uasqIs=\", false, function () {\n  return [useHistory];\n});\n_c = OCR;\nexport default OCR;\nvar _c;\n$RefreshReg$(_c, \"OCR\");","map":{"version":3,"names":["React","useState","axios","useHistory","jsxDEV","_jsxDEV","OCR","_s","recognizedText","setRecognizedText","imagePath","setImagePath","history","handleOCR","response","post","location","origin","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DeLL/Dropbox/My PC (DESKTOP-2P3I371)/Desktop/20ucs079/client/src/pages/ocr.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst OCR = () => {\r\n  const [recognizedText, setRecognizedText] = useState('');\r\n  const [imagePath, setImagePath] = useState(\"/ktp.jpeg\"); // Assuming the image is in the public folder\r\n  const history = useHistory();\r\n\r\n  const handleOCR = async () => {\r\n    try {\r\n      const response = await axios.post(`${history.location.origin}/api/v1/ocr`, { imagePath });\r\n      setRecognizedText(response.data);\r\n    } catch (error) {\r\n      console.error('Error processing OCR:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>OCR Page</h2>\r\n      <img src={imagePath} alt=\"Image for OCR\" />\r\n      <button onClick={handleOCR}>Run OCR</button>\r\n      {recognizedText && <div>Recognized Text: {recognizedText}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OCR;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;EACzD,MAAMW,OAAO,GAAGT,UAAU,CAAC,CAAC;EAE5B,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAE,GAAEH,OAAO,CAACI,QAAQ,CAACC,MAAO,aAAY,EAAE;QAAEP;MAAU,CAAC,CAAC;MACzFD,iBAAiB,CAACK,QAAQ,CAACI,IAAI,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBpB,OAAA;MAAKqB,GAAG,EAAEhB,SAAU;MAACiB,GAAG,EAAC;IAAe;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3CpB,OAAA;MAAQuB,OAAO,EAAEf,SAAU;MAAAQ,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3CjB,cAAc,iBAAIH,OAAA;MAAAgB,QAAA,GAAK,mBAAiB,EAACb,cAAc;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAAClB,EAAA,CAtBID,GAAG;EAAA,QAGSH,UAAU;AAAA;AAAA0B,EAAA,GAHtBvB,GAAG;AAwBT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}