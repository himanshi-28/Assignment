{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DeLL\\\\Dropbox\\\\My PC (DESKTOP-2P3I371)\\\\Desktop\\\\20ucs079\\\\client\\\\src\\\\pages\\\\Summary.js\",\n  _s = $RefreshSig$();\n// OcrComponent.js\nimport React, { useEffect, useState } from 'react';\nimport { createWorker } from 'tesseract.js';\nimport { Box, Typography, useTheme, useMediaQuery, Alert, Collapse, Card } from '@mui/material';\nimport Jimp from \"jimp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OcrComponent = () => {\n  _s();\n  const [ocrText, setOcrText] = useState('');\n  useEffect(() => {\n    const startOcr = async () => {\n      const worker = await createWorker();\n      try {\n        await worker.loadLanguage('ind');\n        await worker.initialize('ind');\n        await worker.setParameters({});\n        const imagePath = '/client/src/pages/ktp.jpeg';\n        const image = await Jimp.read(imagePath);\n        image.rgba(false);\n        image.greyscale();\n        await image.write('edited_' + imagePath);\n        const data = await worker.recognize('edited_' + imagePath);\n        const text = data.data.text;\n        setOcrText(text);\n      } finally {\n        await worker.terminate();\n      }\n    };\n    startOcr();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"OCR Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: ocrText.trim().length > 0,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"info\",\n          children: ocrText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(OcrComponent, \"n3U8YXlWRYHidQXX1ALTWUcNYgA=\");\n_c = OcrComponent;\nexport default OcrComponent;\nvar _c;\n$RefreshReg$(_c, \"OcrComponent\");","map":{"version":3,"names":["React","useEffect","useState","createWorker","Box","Typography","useTheme","useMediaQuery","Alert","Collapse","Card","Jimp","jsxDEV","_jsxDEV","OcrComponent","_s","ocrText","setOcrText","startOcr","worker","loadLanguage","initialize","setParameters","imagePath","image","read","rgba","greyscale","write","data","recognize","text","terminate","children","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","in","trim","length","severity","_c","$RefreshReg$"],"sources":["C:/Users/DeLL/Dropbox/My PC (DESKTOP-2P3I371)/Desktop/20ucs079/client/src/pages/Summary.js"],"sourcesContent":["// OcrComponent.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { createWorker } from 'tesseract.js';\r\nimport { Box, Typography, useTheme, useMediaQuery, Alert, Collapse, Card } from '@mui/material';\r\nimport Jimp from \"jimp\";\r\n\r\nconst OcrComponent = () => {\r\n  const [ocrText, setOcrText] = useState('');\r\n\r\n  useEffect(() => {\r\n    const startOcr = async () => {\r\n      const worker = await createWorker();\r\n      try {\r\n        await worker.loadLanguage('ind');\r\n        await worker.initialize('ind');\r\n        await worker.setParameters({});\r\n\r\n        const imagePath = '/client/src/pages/ktp.jpeg';\r\n        const image = await Jimp.read(imagePath);\r\n        image.rgba(false);\r\n        image.greyscale();\r\n        await image.write('edited_' + imagePath);\r\n\r\n        const data = await worker.recognize('edited_' + imagePath);\r\n        const text = data.data.text;\r\n        setOcrText(text);\r\n      } finally {\r\n        await worker.terminate();\r\n      }\r\n    };\r\n\r\n    startOcr();\r\n  }, []);\r\n\r\n  return (\r\n    <Card>\r\n      <Box p={2}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          OCR Result\r\n        </Typography>\r\n        <Collapse in={ocrText.trim().length > 0}>\r\n          <Alert severity=\"info\">{ocrText}</Alert>\r\n        </Collapse>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default OcrComponent;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,cAAc;AAC3C,SAASC,GAAG,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,eAAe;AAC/F,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMiB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,MAAMC,MAAM,GAAG,MAAMhB,YAAY,CAAC,CAAC;MACnC,IAAI;QACF,MAAMgB,MAAM,CAACC,YAAY,CAAC,KAAK,CAAC;QAChC,MAAMD,MAAM,CAACE,UAAU,CAAC,KAAK,CAAC;QAC9B,MAAMF,MAAM,CAACG,aAAa,CAAC,CAAC,CAAC,CAAC;QAE9B,MAAMC,SAAS,GAAG,4BAA4B;QAC9C,MAAMC,KAAK,GAAG,MAAMb,IAAI,CAACc,IAAI,CAACF,SAAS,CAAC;QACxCC,KAAK,CAACE,IAAI,CAAC,KAAK,CAAC;QACjBF,KAAK,CAACG,SAAS,CAAC,CAAC;QACjB,MAAMH,KAAK,CAACI,KAAK,CAAC,SAAS,GAAGL,SAAS,CAAC;QAExC,MAAMM,IAAI,GAAG,MAAMV,MAAM,CAACW,SAAS,CAAC,SAAS,GAAGP,SAAS,CAAC;QAC1D,MAAMQ,IAAI,GAAGF,IAAI,CAACA,IAAI,CAACE,IAAI;QAC3Bd,UAAU,CAACc,IAAI,CAAC;MAClB,CAAC,SAAS;QACR,MAAMZ,MAAM,CAACa,SAAS,CAAC,CAAC;MAC1B;IACF,CAAC;IAEDd,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA,CAACH,IAAI;IAAAuB,QAAA,eACHpB,OAAA,CAACT,GAAG;MAAC8B,CAAC,EAAE,CAAE;MAAAD,QAAA,gBACRpB,OAAA,CAACR,UAAU;QAAC8B,OAAO,EAAC,IAAI;QAACC,YAAY;QAAAH,QAAA,EAAC;MAEtC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACb3B,OAAA,CAACJ,QAAQ;QAACgC,EAAE,EAAEzB,OAAO,CAAC0B,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAE;QAAAV,QAAA,eACtCpB,OAAA,CAACL,KAAK;UAACoC,QAAQ,EAAC,MAAM;UAAAX,QAAA,EAAEjB;QAAO;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACzB,EAAA,CAxCID,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}